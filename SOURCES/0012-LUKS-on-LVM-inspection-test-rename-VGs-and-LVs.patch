From c95b3086bdbdf840de8d3b24c3ae5e9b847bf588 Mon Sep 17 00:00:00 2001
From: Laszlo Ersek <lersek@redhat.com>
Date: Fri, 19 May 2023 16:08:48 +0200
Subject: [PATCH] LUKS-on-LVM inspection test: rename VGs and LVs

In preparation for a subsequent patch, rename "VG" to "Volume-Group", and
"LV<n>" to "Logical-Volume-<n>", in the LUKS-on-LVM inspection test.

Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=2168506
Signed-off-by: Laszlo Ersek <lersek@redhat.com>
Message-Id: <20230519140849.310774-3-lersek@redhat.com>
Reviewed-by: Richard W.M. Jones <rjones@redhat.com>
(cherry picked from commit 58e26402334a4696fa08730eecc9098fc270ed1c)
---
 test-data/phony-guests/make-fedora-img.pl     | 30 +++++++++++--------
 .../test-key-option-inspect-luks-on-lvm.sh    | 16 +++++-----
 2 files changed, 25 insertions(+), 21 deletions(-)

diff --git a/test-data/phony-guests/make-fedora-img.pl b/test-data/phony-guests/make-fedora-img.pl
index c0cb5d0b..6362e225 100755
--- a/test-data/phony-guests/make-fedora-img.pl
+++ b/test-data/phony-guests/make-fedora-img.pl
@@ -224,23 +224,27 @@ EOF
 
     # Create the Volume Group on /dev/sda2.
     $g->pvcreate ('/dev/sda2');
-    $g->vgcreate ('VG', ['/dev/sda2']);
-    $g->lvcreate ('Root', 'VG', 32);
-    $g->lvcreate ('LV1',  'VG', 32);
-    $g->lvcreate ('LV2',  'VG', 32);
-    $g->lvcreate ('LV3',  'VG', 64);
+    $g->vgcreate ('Volume-Group', ['/dev/sda2']);
+    $g->lvcreate ('Root',              'Volume-Group', 32);
+    $g->lvcreate ('Logical-Volume-1',  'Volume-Group', 32);
+    $g->lvcreate ('Logical-Volume-2',  'Volume-Group', 32);
+    $g->lvcreate ('Logical-Volume-3',  'Volume-Group', 64);
 
     # Format each Logical Group as a LUKS device, with a different password.
-    $g->luks_format ('/dev/VG/Root', 'FEDORA-Root', 0);
-    $g->luks_format ('/dev/VG/LV1',  'FEDORA-LV1',  0);
-    $g->luks_format ('/dev/VG/LV2',  'FEDORA-LV2',  0);
-    $g->luks_format ('/dev/VG/LV3',  'FEDORA-LV3',  0);
+    $g->luks_format ('/dev/Volume-Group/Root',              'FEDORA-Root', 0);
+    $g->luks_format ('/dev/Volume-Group/Logical-Volume-1',  'FEDORA-LV1',  0);
+    $g->luks_format ('/dev/Volume-Group/Logical-Volume-2',  'FEDORA-LV2',  0);
+    $g->luks_format ('/dev/Volume-Group/Logical-Volume-3',  'FEDORA-LV3',  0);
 
     # Open the LUKS devices. This creates nodes like /dev/mapper/*-luks.
-    $g->cryptsetup_open ('/dev/VG/Root', 'FEDORA-Root', 'Root-luks');
-    $g->cryptsetup_open ('/dev/VG/LV1',  'FEDORA-LV1',  'LV1-luks');
-    $g->cryptsetup_open ('/dev/VG/LV2',  'FEDORA-LV2',  'LV2-luks');
-    $g->cryptsetup_open ('/dev/VG/LV3',  'FEDORA-LV3',  'LV3-luks');
+    $g->cryptsetup_open ('/dev/Volume-Group/Root',
+                         'FEDORA-Root', 'Root-luks');
+    $g->cryptsetup_open ('/dev/Volume-Group/Logical-Volume-1',
+                         'FEDORA-LV1',  'LV1-luks');
+    $g->cryptsetup_open ('/dev/Volume-Group/Logical-Volume-2',
+                         'FEDORA-LV2',  'LV2-luks');
+    $g->cryptsetup_open ('/dev/Volume-Group/Logical-Volume-3',
+                         'FEDORA-LV3',  'LV3-luks');
 
     # Phony root filesystem.
     $g->mkfs ('ext2', '/dev/mapper/Root-luks', blocksize => 4096, label => 'ROOT');
diff --git a/tests/luks/test-key-option-inspect-luks-on-lvm.sh b/tests/luks/test-key-option-inspect-luks-on-lvm.sh
index 52cd7e98..a8d72b9f 100755
--- a/tests/luks/test-key-option-inspect-luks-on-lvm.sh
+++ b/tests/luks/test-key-option-inspect-luks-on-lvm.sh
@@ -30,10 +30,10 @@ skip_unless_phony_guest fedora-luks-on-lvm.img
 # Volume names.
 guestfish=(guestfish --listen --ro --inspector
            --add ../test-data/phony-guests/fedora-luks-on-lvm.img)
-keys_by_lvname=(--key /dev/VG/Root:key:FEDORA-Root
-                --key /dev/VG/LV1:key:FEDORA-LV1
-                --key /dev/VG/LV2:key:FEDORA-LV2
-                --key /dev/VG/LV3:key:FEDORA-LV3)
+keys_by_lvname=(--key /dev/Volume-Group/Root:key:FEDORA-Root
+                --key /dev/Volume-Group/Logical-Volume-1:key:FEDORA-LV1
+                --key /dev/Volume-Group/Logical-Volume-2:key:FEDORA-LV2
+                --key /dev/Volume-Group/Logical-Volume-3:key:FEDORA-LV3)
 
 # The variable assignment below will fail, and abort the script, if guestfish
 # refuses to start up.
@@ -56,10 +56,10 @@ function cleanup_guestfish
 trap cleanup_guestfish EXIT
 
 # Get the UUIDs of the LUKS devices.
-uuid_root=$(guestfish --remote -- luks-uuid /dev/VG/Root)
-uuid_lv1=$( guestfish --remote -- luks-uuid /dev/VG/LV1)
-uuid_lv2=$( guestfish --remote -- luks-uuid /dev/VG/LV2)
-uuid_lv3=$( guestfish --remote -- luks-uuid /dev/VG/LV3)
+uuid_root=$(guestfish --remote -- luks-uuid /dev/Volume-Group/Root)
+uuid_lv1=$( guestfish --remote -- luks-uuid /dev/Volume-Group/Logical-Volume-1)
+uuid_lv2=$( guestfish --remote -- luks-uuid /dev/Volume-Group/Logical-Volume-2)
+uuid_lv3=$( guestfish --remote -- luks-uuid /dev/Volume-Group/Logical-Volume-3)
 
 # The actual test.
 function check_filesystems
